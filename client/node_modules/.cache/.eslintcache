[{"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\index.js":"1","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\App.js":"3","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\auth\\login_page.jsx":"4","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\service\\UserService.js":"5","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\model\\entity\\User.js":"6","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\auth\\signup_page.jsx":"7","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\modal\\modal_message.jsx":"8","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\home\\home_page.jsx":"9","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\dropdown.jsx":"10","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\info.jsx":"11","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\PageHeader.jsx":"12","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\Dropdown.jsx":"13","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\Info.jsx":"14"},{"size":535,"mtime":1651254326713,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":601,"mtime":1651592533622,"results":"18","hashOfConfig":"16"},{"size":4770,"mtime":1651602236360,"results":"19","hashOfConfig":"16"},{"size":1145,"mtime":1651564490665,"results":"20","hashOfConfig":"16"},{"size":363,"mtime":1651513333104,"results":"21","hashOfConfig":"16"},{"size":10797,"mtime":1651598226219,"results":"22","hashOfConfig":"16"},{"size":2427,"mtime":1651601504838,"results":"23","hashOfConfig":"16"},{"size":1344,"mtime":1651601612391,"results":"24","hashOfConfig":"16"},{"size":1603,"mtime":1651597101104,"results":"25","hashOfConfig":"16"},{"size":616,"mtime":1651602341358,"results":"26","hashOfConfig":"16"},{"size":2513,"mtime":1651601612385,"results":"27","hashOfConfig":"16"},{"size":1603,"mtime":1651597101104,"results":"28","hashOfConfig":"16"},{"size":616,"mtime":1651602341358,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wz2olk",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\index.js",[],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\App.js",[],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\auth\\login_page.jsx",["78","79"],[],"import React from 'react';\r\nimport UserService from \"../../service/UserService\";\r\nimport {User} from '../../model/entity/User';\r\nimport '../../common/app.css';\r\nimport './form_page.css';\r\nimport ModalMessage from \"../modal/modal_message\";\r\nimport Info from \"../fragment/Info\";\r\n\r\nexport default class LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if(localStorage.getItem(\"access-token\")) {\r\n            // TODO\r\n        }\r\n\r\n        this.state = {\r\n            user: new User(),\r\n            submitted: false,\r\n            loading: false,\r\n            errorMessage: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.classList.add(\"primary-background\");\r\n    }\r\n\r\n    handleInput(e) {\r\n        const {name, value} = e.target;\r\n        const user = this.state.user;\r\n\r\n        user[name] = value;\r\n\r\n        this.setState({user: user});\r\n    }\r\n\r\n    handleLogin(e) {\r\n        this.setState({submitted: true});\r\n\r\n        let{user} = this.state;\r\n\r\n        if(!(user[\"email\"] && user[\"password\"])) {\r\n            return;\r\n        }\r\n\r\n        this.setState({loading: true});\r\n\r\n        UserService.login(user).then(response => {\r\n            localStorage.setItem(\"access-token\", response.headers[\"access_token\"]);\r\n            localStorage.setItem(\"refresh-token\", response.headers[\"access_token\"]);\r\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n            user = response.data;\r\n\r\n            console.info(\"Giriş başarılı: \"+user.name.firstname + \" \" + user.name.lastname + \"\\nYetki: \"+user.role);\r\n\r\n            this.setState({errorMessage: null, loading: false});\r\n            window.location = \"/home\";\r\n        }).catch(error => {\r\n            this.setState({\r\n                errorMessage: error.response.data,\r\n                loading: false\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const{user, submitted, loading, errorMessage, hasError} = this.state;\r\n        const params = new URLSearchParams(window.location.search);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"container form-container\">\r\n                    <div className=\"form center-form\">\r\n                        <h1 className=\"big-title primary\"><strong>Giriş</strong></h1>\r\n                        <div className=\"form-control-group\">\r\n                            <div className=\"form-control flex-direction-column\">\r\n                                <label>Email</label>\r\n                                <input type=\"text\" name=\"email\" className=\"input text-input\" value={user.email} placeholder=\"E-posta adresiniz\" id=\"emailField\" onChange={(e) => this.handleInput(e)}/>\r\n                                {submitted && !user.email &&\r\n                                <p className=\"alert error\">E-posta adresinizi giriniz</p>\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-control flex-direction-column\">\r\n                                <label>Şifre</label>\r\n                                <input type=\"password\" name=\"password\" className=\"input text-input\" value={user.password} placeholder=\"Şifreniz\" id=\"passwordField\" onChange={(e) => this.handleInput(e)}/>\r\n                                {submitted && !user.password &&\r\n                                <p className=\"alert error\">Şifrenizi giriniz</p>\r\n                                }\r\n                            </div>\r\n                            { errorMessage &&\r\n                            <div className=\"form-control flex-direction-column\">\r\n                                <p className=\"alert error\">{errorMessage}</p>\r\n                            </div>\r\n                            }\r\n\r\n                            { params.get(\"logout\") != null &&\r\n                            <Info message={\"Başarıyla çıkış yaptınız\"}/>\r\n                            }\r\n                            { params.get(\"signup\") != null &&\r\n                            <Info message={\"Başarıyla hesap oluşturdunuz\"}/>\r\n                            }\r\n\r\n                            <div className=\"form-control flex-direction-column\">\r\n                                <button disabled={loading} onClick={(e) => this.handleLogin(e)} className=\"action-element\">Giriş</button>\r\n                            </div>\r\n                            <div className=\"form-control flex-direction-column flex-center-align\">\r\n                                <a className=\"link standard-link\" href=\"/signup\">Yeni bir hesap oluşturun</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\service\\UserService.js",[],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\model\\entity\\User.js",[],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\auth\\signup_page.jsx",["80","81","82","83"],[],"import React from \"react\";\r\nimport UserService from \"../../service/UserService\";\r\nimport {User} from \"../../model/entity/User\";\r\nimport \"./form_page.css\";\r\nimport \"../../common/app.css\";\r\n\r\nexport default class SignupPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: new User(),\r\n            submitted: false,\r\n            errorMessage: null,\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.classList.add(\"primary-background\");\r\n    }\r\n\r\n    handleInput(e) {\r\n        const {name, value} = e.target\r\n        const user = this.state.user;\r\n\r\n        user[name] = value;\r\n\r\n        this.setState({user: user});\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.setState({submitted: true});\r\n\r\n        let{user, errorMessage} = this.state;\r\n\r\n        if(!(user.firstname && user.lastname && user.email && user.password && user.username)) {\r\n           return;\r\n        }\r\n\r\n        if(user.password != user.repeatPassword) {\r\n            return;\r\n        }\r\n\r\n        user.name = {\r\n            firstname: user.firstname,\r\n            lastname: user.lastname\r\n        }\r\n\r\n        user.primaryPhone = {\r\n            title: user.phoneTitle,\r\n            number: user.phoneNumber\r\n        }\r\n\r\n        this.setState({loading: true});\r\n\r\n        console.info(user);\r\n\r\n        UserService.register(user).then(response => {\r\n            console.log(response.data);\r\n            this.setState({loading: false});\r\n            window.location = \"/login?signup\";\r\n        }).catch(error => {\r\n            this.setState({loading: false, errorMessage: error.response.data});\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const{user, loading, submitted, errorMessage} = this.state;\r\n\r\n        return (\r\n            <div className=\"container form-container\">\r\n                <div className=\"form center-form\">\r\n                    <h1 className=\"big-title primary\">Üyelik</h1>\r\n\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <h2>Kimlik</h2>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"firstnameField\">İsim <p className=\"sign\">*</p></label>\r\n                                        <input minLength={1} maxLength={20} type=\"text\" name=\"firstname\" value={user.firstname} onChange={(e) => this.handleInput(e)} id=\"firstnameField\" placeholder=\"Adınız\"></input>\r\n\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"lastnameField\">Soyisim <p className=\"sign\">*</p></label>\r\n                                        <input minLength={1} maxLength={20} type=\"text\" name=\"lastname\" value={user.lastname} onChange={(e) => this.handleInput(e)} id=\"lastnameField\" placeholder=\"Soyadınız\"></input>\r\n\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    { (submitted && !user.firstname) &&\r\n                                    <p className=\"alert error\">İsim gereklidir</p>\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    { (submitted && !user.lastname) &&\r\n                                    <p className=\"alert error\">Soyisim gereklidir</p>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"emailField\">Email <p className=\"sign\">*</p></label>\r\n                                        <input type=\"email\" value={user.email} name=\"email\" onChange={(e) => this.handleInput(e)} id=\"emailField\" placeholder=\"E-Mail adresiniz\"></input>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"usernameField\">Kullanıcı adı <p className=\"sign\">*</p></label>\r\n                                        <input minLength={5} maxLength={12} type=\"text\" value={user.username} name=\"username\" onChange={(e) => this.handleInput(e)} id=\"usernameField\" placeholder=\"Kullanıcı adınız\"></input>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    { submitted && !user.email &&\r\n                                    <p className=\"alert error\">E-posta gereklidir</p>\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    { submitted && !user.username &&\r\n                                    <p className=\"alert error\">Kullanıcı adı gereklidir</p>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>\r\n                                    <h2>Parola</h2>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"passwordField\">Şifre <p className=\"sign\">*</p></label>\r\n                                        <input minLength={4} maxLength={16} type=\"password\" value={user.password} name=\"password\" onChange={(e) => this.handleInput(e)} id=\"passwordField\" placeholder=\"Parolanız\"></input>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"passwordRepeat\">Şifre (tekrar) <p className=\"sign\">*</p></label>\r\n                                        <input minLength={4} maxLength={16} type=\"password\" value={user.repeatPassword} name=\"repeatPassword\" onChange={(e) => this.handleInput(e)} id=\"passwordRepeat\" placeholder=\"Parolanız\"></input>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    { submitted && !user.password &&\r\n                                    <p className=\"alert error\">Şifre gereklidir</p>\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    { (user.repeatPassword != null && user.repeatPassword != \"\" && user.password != user.repeatPassword) &&\r\n                                    <p className=\"alert error\">Şifreniz ile uyuşmamaktadır</p>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>\r\n                                    <h2>Telefon</h2>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"phoneTitleField\">İsim</label>\r\n                                        <input type=\"text\" value={user.phoneTitle} name=\"phoneTitle\" onChange={(e) => this.handleInput(e)} id=\"phoneTitleField\" placeholder=\"örn: cep\"></input>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"phoneNumberField\">Numara</label>\r\n                                        <input type=\"text\" value={user.phoneNumber} name=\"phoneNumber\" onChange={(e) => this.handleInput(e)} id=\"phoneNumberField\" placeholder=\"5xx xxx xx xx\"></input>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>\r\n                                    <h2>Yaş</h2>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form control flex-direction-column\">\r\n                                        <label htmlFor=\"birthDateField\">Doğum tarihi</label>\r\n                                        <input type=\"date\" value={user.birthDate} name=\"birthDate\" onChange={(e) => this.handleInput(e)} id=\"birthDateField\" placeholder=\"Seçiniz..\"></input>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <h5 className=\"note\"> <p className=\"sign\">*</p> ile işaretlenmiş alanların doldurulması zorunludur</h5>\r\n                    <hr/>\r\n\r\n                    { submitted && errorMessage &&\r\n                    <p className=\"alert error\">{errorMessage}</p>\r\n                    }\r\n\r\n                    <div className=\"form control flex-direction-column\">\r\n                        <button disabled={loading} onClick={(e) => this.handleSubmit(e)} className=\"action-element\">Gönder</button>\r\n                    </div>\r\n                    <div className=\"form control flex-direction-column\">\r\n                        <a className=\"link standard-link\" href=\"/login\">Zaten bir hesabınız var mı? giriş yapın</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\modal\\modal_message.jsx",["84","85","86"],[],"import React from \"react\";\r\nimport {FaRegWindowClose, FaExclamationCircle, FaExclamationTriangle, FaWindowClose} from \"react-icons/fa\";\r\n\r\nexport default class ModalMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let icon;\r\n\r\n        if(props.type == \"info\") icon =  <FaExclamationCircle className=\"mini-icon icon-info flex-center-align\"/>\r\n        if(props.type == \"warn\") icon =  <FaExclamationTriangle className=\"mini-icon icon-warn flex-center-align\"/>\r\n        if(props.type == \"error\") icon =  <FaWindowClose className=\"mini-icon icon-error flex-center-align\"/>\r\n\r\n        this.state = {\r\n            message: this.props.message,\r\n            type: this.props.type,\r\n            id: this.props.id,\r\n            title: this.props.title,\r\n            subtitle: this.props.subtitle,\r\n            icon: icon\r\n        }\r\n    }\r\n\r\n    dismiss(e) {\r\n        if(e.target === document.getElementById(this.state.id) || e.target === document.getElementById(\"modalDismissButton\") || e.target === document.getElementById(this.state.id + \"Dismiss\")) {\r\n            document.getElementById(this.state.id).remove();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const{message, type, title, id, subtitle, icon} = this.state;\r\n\r\n        return (\r\n            <div className=\"modal modal-background\" id={id} onClick={(e) => this.dismiss(e)}>\r\n                <div className=\"center-container\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <FaRegWindowClose className=\"mini-icon modal-dismiss-button\" id={id+\"Dismiss\"} onChange={(e) => this.dismiss(e)}/>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"modal-body\">\r\n                        {icon &&\r\n                        <div className={\"flex alert modal-alert \" + type}>\r\n                            {icon}\r\n                            <p>{subtitle}</p>\r\n                        </div>\r\n                        }\r\n                        <p className=\"modal-message\">{message}</p>\r\n                    </div>\r\n                    <div className=\"modal-footer right-align\">\r\n                        <button className=\"standard-button\" id=\"modalDismissButton\" onClick={(e) => this.dismiss(e)}>Tamam</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\home\\home_page.jsx",[],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\dropdown.jsx",["87"],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\info.jsx",[],[],"C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\PageHeader.jsx",["88"],[],"import React from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport {FaRegQuestionCircle, FaRegUserCircle, FaCogs, FaRegArrowAltCircleLeft} from \"react-icons/fa\";\r\n\r\nexport default class PageHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const userMenuContent = [\r\n            {\r\n                text: \"Profil\",\r\n                href: \"/profile\",\r\n                key: \"profile\",\r\n                icon: <FaRegUserCircle className=\"mini-icon flex-center-align\"/>\r\n            },\r\n            {\r\n                text: \"Ayarlar\",\r\n                href: \"/settings\",\r\n                key: \"settings\",\r\n                icon: <FaCogs className=\"mini-icon flex-center-align\"/>\r\n            },\r\n            {\r\n                text: \"Çıkış\",\r\n                href: \"/login?logout\",\r\n                key: \"logout\",\r\n                icon: <FaRegArrowAltCircleLeft className=\"mini-icon flex-center-align\"/>\r\n            },\r\n            {\r\n                text: \"Hakkında\",\r\n                href: \"/about\",\r\n                key: \"about\",\r\n                icon: <FaRegQuestionCircle className=\"mini-icon flex-center-align\"/>\r\n            }\r\n        ];\r\n\r\n        // <a href=\"https://www.flaticon.com/free-icons/user\" title=\"user icons\">User icons created by Bombasticon Studio - Flaticon</a>\r\n\r\n        const contents = userMenuContent.map((obj) =>\r\n            <div key={obj.key} className=\"dropdown-option flex space-between\" onClick={() => window.location=obj.href}>\r\n                <p href={obj.href} className=\"dropdown-option-text\">{obj.text}</p>\r\n                {obj.icon}\r\n            </div>\r\n        );\r\n\r\n        this.state = {\r\n            userMenuContent:  contents\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        const{userMenuContent} = this.state\r\n\r\n        return(\r\n            <div className=\"page-header flex space-between\">\r\n                <h2 onClick={() => window.location=\"/\"} className=\"big-title secondary\">Bookstore</h2>\r\n                <div className=\"flex flex-center-align space-between\" id=\"searchBar\">\r\n                    <input placeholder=\"ISBN\" className=\"flex-center-align\" type=\"text\" id=\"search\"/>\r\n                    <button className=\"standard-button width-fit-content flex-center-align no-margin\">Ara</button>\r\n                    {<Dropdown title={\"Ben\"} id=\"userMenu\" content={userMenuContent}/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\Dropdown.jsx",["89"],[],"import React from \"react\";\r\nimport '../../common/app.css';\r\nimport {FaRegUser} from \"react-icons/fa\";\r\n\r\nexport default class Dropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            display: false,\r\n            content: props.content,\r\n            title: props.title,\r\n            id: props.id\r\n        }\r\n    }\r\n\r\n    toggleDisplay(e) {\r\n        const{display, id} = this.state;\r\n\r\n        if(e.target === document.getElementById(id) || e.target === document.getElementById(id+\"Title\")) { // can click the title or dropdown container itself\r\n            if(display) this.setState({display: false});\r\n            else this.setState({display: true});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"click\", (e) => {\r\n            if(!e.target.className.includes(\"dropdown\")) {\r\n                this.setState({display: false});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {display, content, title, id} = this.state;\r\n\r\n        return(\r\n            <div className=\"flex dropdown flex-center-align secondary\" id={id} onClick={(e) => this.toggleDisplay(e)}>\r\n                <FaRegUser className=\"mini-icon flex-center-align dropdown-title\" id={id + \"Title\"}/>\r\n                <div className={\"dropdown-content-container width-fit-content\" + (display ? \" display-block\" : \" display-none\")}>\r\n                    <div className=\"dropdown-option-container\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Taha Donuk\\Desktop\\Workshop\\Software\\Online Bookstore\\client\\src\\component\\fragment\\Info.jsx",[],[],{"ruleId":"90","severity":1,"message":"91","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":20},{"ruleId":"90","severity":1,"message":"94","line":69,"column":55,"nodeType":"92","messageId":"93","endLine":69,"endColumn":63},{"ruleId":"90","severity":1,"message":"95","line":35,"column":19,"nodeType":"92","messageId":"93","endLine":35,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":41,"column":26,"nodeType":"98","messageId":"99","endLine":41,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":166,"column":91,"nodeType":"98","messageId":"99","endLine":166,"endColumn":93},{"ruleId":"96","severity":1,"message":"97","line":166,"column":114,"nodeType":"98","messageId":"99","endLine":166,"endColumn":116},{"ruleId":"96","severity":1,"message":"100","line":10,"column":23,"nodeType":"98","messageId":"99","endLine":10,"endColumn":25},{"ruleId":"96","severity":1,"message":"100","line":11,"column":23,"nodeType":"98","messageId":"99","endLine":11,"endColumn":25},{"ruleId":"96","severity":1,"message":"100","line":12,"column":23,"nodeType":"98","messageId":"99","endLine":12,"endColumn":25},{"ruleId":"90","severity":1,"message":"101","line":35,"column":34,"nodeType":"92","messageId":"93","endLine":35,"endColumn":39},{"ruleId":"90","severity":1,"message":"102","line":51,"column":15,"nodeType":"92","messageId":"93","endLine":51,"endColumn":19},{"ruleId":"90","severity":1,"message":"101","line":35,"column":34,"nodeType":"92","messageId":"93","endLine":35,"endColumn":39},"no-unused-vars","'ModalMessage' is defined but never used.","Identifier","unusedVar","'hasError' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'title' is assigned a value but never used.","'user' is assigned a value but never used."]