{"ast":null,"code":"import axios from 'axios';\nimport { BehaviorSubject } from 'rxjs';\nconst URL = \"http://localhost:8765/api/user\";\nconst currentUser = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nclass UserService {\n  get currentUserValue() {\n    return currentUser.value;\n  }\n\n  get currentUser() {\n    return currentUser.asObservable;\n  }\n\n  login(user) {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n    return axios({\n      url: URL + \"/login\",\n      method: \"POST\",\n      withCredentials: false,\n      data: JSON.stringify(user)\n    }).then(response => {\n      this.updateLastLogin(response.data);\n      return response;\n    });\n  }\n\n  updateLastLogin(user) {\n    const body = {\n      id: user.userId,\n      date: user.lastLoginDate\n    };\n    axios({\n      url: URL + \"checkin\",\n      method: \"POST\",\n      withCredentials: false,\n      data: JSON.stringify(new Date())\n    }).then(response => {\n      console.log(\"login success\");\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  logout() {\n    return axios.post(URL + \"/logout\", {}).then(response => {\n      localStorage.removeItem('currentUser');\n      currentUser.next(null);\n    });\n  }\n\n  register(user) {\n    return axios.post(URL + 'register', JSON.stringify(user)), {\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8'\n      }\n    };\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/Taha Donuk/Desktop/Workshop/Software/Online Bookstore/client/src/service/UserService.js"],"names":["axios","BehaviorSubject","URL","currentUser","JSON","parse","localStorage","getItem","UserService","currentUserValue","value","asObservable","login","user","headers","url","method","withCredentials","data","stringify","then","response","updateLastLogin","body","id","userId","date","lastLoginDate","Date","console","log","error","logout","post","removeItem","next","register"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,MAA9B;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AACA,MAAMC,WAAW,GAAG,IAAIF,eAAJ,CAAoBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAApB;;AAEA,MAAMC,WAAN,CAAkB;AACI,MAAhBC,gBAAgB,GAAG;AACrB,WAAON,WAAW,CAACO,KAAnB;AACD;;AAEc,MAAXP,WAAW,GAAG;AAChB,WAAOA,WAAW,CAACQ,YAAnB;AACD;;AAEDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV,UAAMC,OAAO,GAAG;AACd,sBAAgB,kBADF;AAEd,qCAA+B;AAFjB,KAAhB;AAKA,WAAOd,KAAK,CAAC;AACXe,MAAAA,GAAG,EAAEb,GAAG,GAAG,QADA;AAEXc,MAAAA,MAAM,EAAE,MAFG;AAGXC,MAAAA,eAAe,EAAE,KAHN;AAIXC,MAAAA,IAAI,EAAEd,IAAI,CAACe,SAAL,CAAeN,IAAf;AAJK,KAAD,CAAL,CAKJO,IALI,CAKCC,QAAQ,IAAI;AAClB,WAAKC,eAAL,CAAqBD,QAAQ,CAACH,IAA9B;AACA,aAAOG,QAAP;AACD,KARM,CAAP;AASD;;AAEDC,EAAAA,eAAe,CAACT,IAAD,EAAO;AACpB,UAAMU,IAAI,GAAG;AACXC,MAAAA,EAAE,EAAEX,IAAI,CAACY,MADE;AAEXC,MAAAA,IAAI,EAAEb,IAAI,CAACc;AAFA,KAAb;AAIA3B,IAAAA,KAAK,CAAC;AACJe,MAAAA,GAAG,EAAEb,GAAG,GAAG,SADP;AAEJc,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,eAAe,EAAE,KAHb;AAIJC,MAAAA,IAAI,EAAEd,IAAI,CAACe,SAAL,CAAe,IAAIS,IAAJ,EAAf;AAJF,KAAD,CAAL,CAKGR,IALH,CAKQC,QAAQ,IAAI;AAClBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAPD,EAOGC,KAAK,IAAI;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KATD;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAOhC,KAAK,CAACiC,IAAN,CAAW/B,GAAG,GAAG,SAAjB,EAA4B,EAA5B,EAAgCkB,IAAhC,CAAqCC,QAAQ,IAAI;AACtDf,MAAAA,YAAY,CAAC4B,UAAb,CAAwB,aAAxB;AACA/B,MAAAA,WAAW,CAACgC,IAAZ,CAAiB,IAAjB;AACD,KAHM,CAAP;AAID;;AAEDC,EAAAA,QAAQ,CAACvB,IAAD,EAAO;AACb,WAAOb,KAAK,CAACiC,IAAN,CAAW/B,GAAG,GAAG,UAAjB,EAA6BE,IAAI,CAACe,SAAL,CAAeN,IAAf,CAA7B,GAAoD;AAACC,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB;AAAV,KAA3D;AACD;;AApDe;;AAuDlB,eAAe,IAAIN,WAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\nconst URL = \"http://localhost:8765/api/user\";\r\nconst currentUser = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\r\n\r\nclass UserService {\r\n  get currentUserValue() {\r\n    return currentUser.value;\r\n  }\r\n\r\n  get currentUser() {\r\n    return currentUser.asObservable;\r\n  }\r\n\r\n  login(user) {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\"\r\n    }\r\n\r\n    return axios({\r\n      url: URL + \"/login\",\r\n      method: \"POST\",\r\n      withCredentials: false,\r\n      data: JSON.stringify(user)\r\n    }).then(response => {\r\n      this.updateLastLogin(response.data);\r\n      return response;\r\n    });\r\n  }\r\n\r\n  updateLastLogin(user) {\r\n    const body = {\r\n      id: user.userId,\r\n      date: user.lastLoginDate\r\n    }\r\n    axios({\r\n      url: URL + \"checkin\",\r\n      method: \"POST\",\r\n      withCredentials: false,\r\n      data: JSON.stringify(new Date())\r\n    }).then(response => {\r\n      console.log(\"login success\")\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return axios.post(URL + \"/logout\", {}).then(response => {\r\n      localStorage.removeItem('currentUser');\r\n      currentUser.next(null);\r\n    });\r\n  }\r\n\r\n  register(user) {\r\n    return axios.post(URL + 'register', JSON.stringify(user)), {headers: {'Content-Type':'application/json; charset=UTF-8'}};\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}