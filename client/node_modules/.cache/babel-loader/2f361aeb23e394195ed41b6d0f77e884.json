{"ast":null,"code":"import axios from 'axios';\nimport { BehaviorSubject } from 'rxjs';\nconst URL = \"http://localhost:8765/api/user\";\nconst currentUser = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nclass UserService {\n  get currentUserValue() {\n    return currentUser.value;\n  }\n\n  get currentUser() {\n    return currentUser.asObservable;\n  }\n\n  test(user) {\n    return axios.get(URL + \"/test\").then(resp => {\n      console.log(resp);\n    });\n  }\n\n  login(user) {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n    return axios.post(URL + \"/login\", JSON.stringify(user), {\n      headers: headers,\n      withCredentials: false\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  logout() {\n    return axios.post(URL + \"/logout\", {}).then(response => {\n      localStorage.removeItem('currentUser');\n      currentUser.next(null);\n    });\n  }\n\n  register(user) {\n    return axios.post(URL + 'register', JSON.stringify(user)), {\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8'\n      }\n    };\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/Taha Donuk/Desktop/Workshop/Software/Online Bookstore/client/src/service/UserService.js"],"names":["axios","BehaviorSubject","URL","currentUser","JSON","parse","localStorage","getItem","UserService","currentUserValue","value","asObservable","test","user","get","then","resp","console","log","login","headers","post","stringify","withCredentials","response","logout","removeItem","next","register"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,MAA9B;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AACA,MAAMC,WAAW,GAAG,IAAIF,eAAJ,CAAoBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAApB;;AAEA,MAAMC,WAAN,CAAkB;AACI,MAAhBC,gBAAgB,GAAG;AACrB,WAAON,WAAW,CAACO,KAAnB;AACD;;AAEc,MAAXP,WAAW,GAAG;AAChB,WAAOA,WAAW,CAACQ,YAAnB;AACD;;AAEDC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACT,WAAOb,KAAK,CAACc,GAAN,CAAUZ,GAAG,GAAG,OAAhB,EAAyBa,IAAzB,CAA8BC,IAAI,IAAI;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAFM,CAAP;AAGD;;AAEDG,EAAAA,KAAK,CAACN,IAAD,EAAO;AACV,UAAMO,OAAO,GAAG;AACd,sBAAgB,kBADF;AAEd,qCAA+B;AAFjB,KAAhB;AAKA,WAAOpB,KAAK,CAACqB,IAAN,CAAWnB,GAAG,GAAC,QAAf,EAAyBE,IAAI,CAACkB,SAAL,CAAeT,IAAf,CAAzB,EAA+C;AACpDO,MAAAA,OAAO,EAAEA,OAD2C;AAEpDG,MAAAA,eAAe,EAAE;AAFmC,KAA/C,EAGJR,IAHI,CAGCS,QAAQ,IAAI;AAClBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACD,KALM,CAAP;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAOzB,KAAK,CAACqB,IAAN,CAAWnB,GAAG,GAAG,SAAjB,EAA4B,EAA5B,EAAgCa,IAAhC,CAAqCS,QAAQ,IAAI;AACtDlB,MAAAA,YAAY,CAACoB,UAAb,CAAwB,aAAxB;AACAvB,MAAAA,WAAW,CAACwB,IAAZ,CAAiB,IAAjB;AACD,KAHM,CAAP;AAID;;AAEDC,EAAAA,QAAQ,CAACf,IAAD,EAAO;AACb,WAAOb,KAAK,CAACqB,IAAN,CAAWnB,GAAG,GAAG,UAAjB,EAA6BE,IAAI,CAACkB,SAAL,CAAeT,IAAf,CAA7B,GAAoD;AAACO,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB;AAAV,KAA3D;AACD;;AAtCe;;AAyClB,eAAe,IAAIZ,WAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\nconst URL = \"http://localhost:8765/api/user\";\r\nconst currentUser = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\r\n\r\nclass UserService {\r\n  get currentUserValue() {\r\n    return currentUser.value;\r\n  }\r\n\r\n  get currentUser() {\r\n    return currentUser.asObservable;\r\n  }\r\n\r\n  test(user) {\r\n    return axios.get(URL + \"/test\").then(resp => {\r\n      console.log(resp);\r\n    })\r\n  }\r\n\r\n  login(user) {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\"\r\n    }\r\n\r\n    return axios.post(URL+\"/login\", JSON.stringify(user), {\r\n      headers: headers,\r\n      withCredentials: false\r\n    }).then(response => {\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return axios.post(URL + \"/logout\", {}).then(response => {\r\n      localStorage.removeItem('currentUser');\r\n      currentUser.next(null);\r\n    });\r\n  }\r\n\r\n  register(user) {\r\n    return axios.post(URL + 'register', JSON.stringify(user)), {headers: {'Content-Type':'application/json; charset=UTF-8'}};\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}