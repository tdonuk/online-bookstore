{"ast":null,"code":"import axios from 'axios';\nimport { BehaviorSubject } from 'rxjs';\nconst URL = \"http://localhost:8765/api/user\";\nconst currentUser = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nclass UserService {\n  get currentUserValue() {\n    return currentUser.value;\n  }\n\n  get currentUser() {\n    return currentUser.asObservable;\n  }\n\n  login(user) {\n    const headers = {\n      authorization: 'Basic ' + btoa(user.username + \":\" + user.password),\n      'Access-Control-Allow-Headers': '*'\n    };\n    console.log(headers.authorization);\n    return axios.get(URL + \"/login\", {\n      headers: headers\n    }).then(response => {\n      localStorage.setItem('currentUser', JSON.stringify(response.data));\n      currentUser.next(response.data);\n    });\n  }\n\n  logout() {\n    return axios.post(URL + \"/logout\", {}).then(response => {\n      localStorage.removeItem('currentUser');\n      currentUser.next(null);\n    });\n  }\n\n  register(user) {\n    return axios.post(URL + 'register', JSON.stringify(user)), {\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8'\n      }\n    };\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/Taha Donuk/Desktop/Workshop/Software/Online Bookstore/client/src/service/UserService.js"],"names":["axios","BehaviorSubject","URL","currentUser","JSON","parse","localStorage","getItem","UserService","currentUserValue","value","asObservable","login","user","headers","authorization","btoa","username","password","console","log","get","then","response","setItem","stringify","data","next","logout","post","removeItem","register"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,MAA9B;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AACA,MAAMC,WAAW,GAAG,IAAIF,eAAJ,CAAoBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAApB;;AAEA,MAAMC,WAAN,CAAkB;AACI,MAAhBC,gBAAgB,GAAG;AACrB,WAAON,WAAW,CAACO,KAAnB;AACD;;AAEc,MAAXP,WAAW,GAAG;AAChB,WAAOA,WAAW,CAACQ,YAAnB;AACD;;AAEDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV,UAAMC,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAE,WAAWC,IAAI,CAACH,IAAI,CAACI,QAAL,GAAgB,GAAhB,GAAsBJ,IAAI,CAACK,QAA5B,CADhB;AAEd,sCAAgC;AAFlB,KAAhB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACC,aAApB;AACA,WAAOf,KAAK,CAACqB,GAAN,CAAUnB,GAAG,GAAG,QAAhB,EAA0B;AAACY,MAAAA,OAAO,EAAEA;AAAV,KAA1B,EAA8CQ,IAA9C,CAAmDC,QAAQ,IAAI;AACpEjB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,aAArB,EAAoCpB,IAAI,CAACqB,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAApC;AACAvB,MAAAA,WAAW,CAACwB,IAAZ,CAAiBJ,QAAQ,CAACG,IAA1B;AACD,KAHM,CAAP;AAID;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO5B,KAAK,CAAC6B,IAAN,CAAW3B,GAAG,GAAG,SAAjB,EAA4B,EAA5B,EAAgCoB,IAAhC,CAAqCC,QAAQ,IAAI;AACtDjB,MAAAA,YAAY,CAACwB,UAAb,CAAwB,aAAxB;AACA3B,MAAAA,WAAW,CAACwB,IAAZ,CAAiB,IAAjB;AACD,KAHM,CAAP;AAID;;AAEDI,EAAAA,QAAQ,CAAClB,IAAD,EAAO;AACb,WAAOb,KAAK,CAAC6B,IAAN,CAAW3B,GAAG,GAAG,UAAjB,EAA6BE,IAAI,CAACqB,SAAL,CAAeZ,IAAf,CAA7B,GAAoD;AAACC,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB;AAAV,KAA3D;AACD;;AA9Be;;AAiClB,eAAe,IAAIN,WAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\nconst URL = \"http://localhost:8765/api/user\";\r\nconst currentUser = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\r\n\r\nclass UserService {\r\n  get currentUserValue() {\r\n    return currentUser.value;\r\n  }\r\n\r\n  get currentUser() {\r\n    return currentUser.asObservable;\r\n  }\r\n\r\n  login(user) {\r\n    const headers = {\r\n      authorization: 'Basic ' + btoa(user.username + \":\" + user.password),\r\n      'Access-Control-Allow-Headers': '*'\r\n    };\r\n    console.log(headers.authorization);\r\n    return axios.get(URL + \"/login\", {headers: headers}).then(response => {\r\n      localStorage.setItem('currentUser', JSON.stringify(response.data));\r\n      currentUser.next(response.data);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return axios.post(URL + \"/logout\", {}).then(response => {\r\n      localStorage.removeItem('currentUser');\r\n      currentUser.next(null);\r\n    });\r\n  }\r\n\r\n  register(user) {\r\n    return axios.post(URL + 'register', JSON.stringify(user)), {headers: {'Content-Type':'application/json; charset=UTF-8'}};\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n"]},"metadata":{},"sourceType":"module"}